substitutions:
  # change device name to match your desired name
  device_name: espresence-mmwave-multi-sensor
  # change sensor name below to the one you want to see in Home Assistant
  device_name_pretty: Multi Presence Occupancy Sensor
  # change room name below to the one you want to see in Home Assistant
  room: "Office"
  # change the below to be your WiFi SSID
  ssid: !secret wifi_ssid
  # change the below to be your WiFi password
  wifi_password: !secret wifi_password
  # UART Pins configured for a D1 Mini stacked setup
  uart_tx_pin: GPIO21
  uart_rx_pin: GPIO22
  # GPIO pulldown Pin configured for a D1 Mini stacked setup
  gpio_pin: GPIO16
  # change temperature offset - due to enclosure in a case with other IC components, there is internal heat, compared with and open (breadboard) project unit, this is ~3 degrees higher, thus -3 offset for enclosure unit
  temperature_offset: "-3"
  # change humidity offset - tested side-by-side with open unit, the enclosed unit registered ~10% less humidity, thus +10 offset
  humidity_offset: "+10"
  # change illuminance multiplier - The bh1750 sensor is placed under the edge of the panasonic PIR module which is a translucent white plastic, it's the only way direct light can hit the illuminance sensor, it's basically shaded... but works fine. We'll say *10 multiplier
  illuminance_multiplier: "10"

# include the yml file with the sensor configuration
i2c:
  sda: 26
  scl: 25
  scan: true

sensor:
  - platform: bme280
    temperature:
      name: "${room} Temperature"
      oversampling: 16x
      filters:
        offset: ${temperature_offset}
    humidity:
      name: "${room} Humidity"
      filters:
        offset: ${humidity_offset}
    address: 0x77
    update_interval: 60s
  - platform: bh1750
    name: "${room} Illuminance"
    filters:
      multiply: ${illuminance_multiplier}
    address: 0x23
    update_interval: 30s

packages:
  inclusions: !include packages/leapmmw_sensor.yml

binary_sensor:
  - platform: gpio
    pin:
      number: 33
      mode: INPUT_PULLDOWN
    name: ${room} PIR
    id: pir_motion_sensor
    device_class: motion
    filters:
      - delayed_off: 10s
  - platform: template
    name: ${room} Occupancy
    id: occupancy
    device_class: occupancy
    filters:
      - delayed_off: 15s
    lambda: |-
      if ( id(mmwave_presence_detection).state or id(pir_motion_sensor).state) {
        return true;
      } 
      else if (id(mmwave_presence_detection).state == 0 and id(pir_motion_sensor).state == 0) {
        return false;
      } 
      else {
        return id(occupancy).state;
      }

esphome:
  name: $device_name

esp32:
  board: wemos_d1_mini32

# Enable Home Assistant API
api:
  encryption:
    key: "assigned_when_you_add_to_esphome"

ota:
  password: "assigned_when_you_add_to_esphome"

# Connect to WiFi & create captive portal and web server
wifi:
  ssid: "${ssid}"
  password: "${wifi_password}"
  use_address: XXX.XXX.XXX.XXX

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name}"
    password: "${wifi_password}"
  #manual_ip:
    # Set this to the IP of the ESP
    #static_ip: XXX.XXX.XXX.XXX
    # Set this to the IP address of the router. Often ends with .1
    #gateway: XXX.XXX.XXX.XXX
    # The subnet of the network. 255.255.255.0 works for most home networks.
    #subnet: XXX.XXX.XXX.XXX
    
captive_portal:

web_server:
  port: 80
  version: 2
  include_internal: true

http_request:
  useragent: esphome/$device_name
  timeout: 2s
